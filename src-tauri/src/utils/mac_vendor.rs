use std::collections::HashMap;

// MAC vendor database (OUI - Organizationally Unique Identifier)
lazy_static::lazy_static! {
    static ref VENDOR_MAP: HashMap<&'static str, &'static str> = {
        let mut m = HashMap::new();
        // Common vendors (first 3 octets of MAC address)
        m.insert("00:00:5E", "IANA");
        m.insert("00:01:42", "Cisco");
        m.insert("00:03:93", "Apple");
        m.insert("00:05:69", "VMware");
        m.insert("00:0C:29", "VMware");
        m.insert("00:0D:93", "Apple");
        m.insert("00:0F:F7", "Cisco");
        m.insert("00:11:32", "Synology");
        m.insert("00:13:10", "Cisco Linksys");
        m.insert("00:14:22", "Dell");
        m.insert("00:16:3E", "Xensource");
        m.insert("00:17:88", "Philips");
        m.insert("00:19:D1", "Intel");
        m.insert("00:1B:63", "Apple");
        m.insert("00:1C:42", "Parallels");
        m.insert("00:1C:B3", "Apple");
        m.insert("00:1D:D8", "Microsoft");
        m.insert("00:1E:06", "Cisco");
        m.insert("00:1E:C2", "Apple");
        m.insert("00:1F:5B", "Apple");
        m.insert("00:1F:F3", "Apple");
        m.insert("00:21:5C", "Intel");
        m.insert("00:21:E9", "Apple");
        m.insert("00:22:41", "Apple");
        m.insert("00:23:12", "Apple");
        m.insert("00:23:32", "Apple");
        m.insert("00:23:6C", "Apple");
        m.insert("00:23:DF", "Apple");
        m.insert("00:24:36", "Apple");
        m.insert("00:25:00", "Apple");
        m.insert("00:25:4B", "Apple");
        m.insert("00:25:90", "Super Micro");
        m.insert("00:25:BC", "Apple");
        m.insert("00:26:08", "Apple");
        m.insert("00:26:4A", "Apple");
        m.insert("00:26:B0", "Apple");
        m.insert("00:26:BB", "Apple");
        m.insert("00:50:56", "VMware");
        m.insert("00:90:27", "Intel");
        m.insert("00:A0:D1", "HUAWEI");
        m.insert("00:E0:4C", "Realtek");
        m.insert("00:FC:8B", "Amazon");
        m.insert("04:CF:8C", "XIAOMI");
        m.insert("08:00:27", "Oracle VirtualBox");
        m.insert("0C:54:15", "HUAWEI");
        m.insert("10:5B:AD", "Mega Electronics");
        m.insert("10:9A:DD", "Apple");
        m.insert("14:10:9F", "Apple");
        m.insert("18:34:51", "Apple");
        m.insert("18:D6:C7", "TP-LINK");
        m.insert("1C:69:A5", "BlackBerry");
        m.insert("1C:AB:A7", "Apple");
        m.insert("20:37:06", "Sony");
        m.insert("20:7C:8F", "Roku");
        m.insert("20:C9:D0", "Apple");
        m.insert("24:6F:28", "ASUS");
        m.insert("28:0D:FC", "Sony");
        m.insert("28:CF:E9", "Apple");
        m.insert("2C:F0:5D", "Apple");
        m.insert("30:96:FB", "Samsung");
        m.insert("34:15:9E", "Apple");
        m.insert("34:51:C9", "Apple");
        m.insert("38:F9:D3", "Apple");
        m.insert("3C:07:54", "Apple");
        m.insert("3C:15:C2", "Apple");
        m.insert("3C:D9:2B", "NETGEAR");
        m.insert("40:30:04", "Apple");
        m.insert("40:6C:8F", "Apple");
        m.insert("40:A6:D9", "Apple");
        m.insert("40:D3:2D", "Apple");
        m.insert("44:D8:84", "Apple");
        m.insert("48:D7:05", "Apple");
        m.insert("48:E9:F1", "Apple");
        m.insert("4C:32:75", "Apple");
        m.insert("4C:8D:79", "Apple");
        m.insert("50:6A:03", "NETGEAR");
        m.insert("50:EA:D6", "Apple");
        m.insert("54:72:4F", "Apple");
        m.insert("58:55:CA", "Apple");
        m.insert("58:B0:35", "Apple");
        m.insert("5C:95:AE", "Apple");
        m.insert("5C:96:9D", "Apple");
        m.insert("5C:97:F3", "Apple");
        m.insert("5C:F9:38", "Apple");
        m.insert("60:03:08", "Apple");
        m.insert("60:C5:47", "Apple");
        m.insert("60:FB:42", "Apple");
        m.insert("60:FE:C5", "Apple");
        m.insert("64:20:0C", "Apple");
        m.insert("64:76:BA", "Apple");
        m.insert("64:A3:CB", "Apple");
        m.insert("64:B9:E8", "Apple");
        m.insert("68:09:27", "Apple");
        m.insert("68:5B:35", "Apple");
        m.insert("68:96:7B", "Apple");
        m.insert("68:9C:70", "Apple");
        m.insert("68:A8:6D", "Apple");
        m.insert("68:D9:3C", "Apple");
        m.insert("6C:3E:6D", "Apple");
        m.insert("6C:70:9F", "Apple");
        m.insert("6C:72:20", "D-Link");
        m.insert("6C:94:F8", "Apple");
        m.insert("6C:C2:6B", "Apple");
        m.insert("70:11:24", "Apple");
        m.insert("70:56:81", "Apple");
        m.insert("70:73:CB", "Apple");
        m.insert("70:CD:60", "Apple");
        m.insert("70:DE:E2", "Apple");
        m.insert("70:EC:E4", "Apple");
        m.insert("74:1B:B2", "Apple");
        m.insert("74:E1:B6", "Apple");
        m.insert("74:E2:F5", "Apple");
        m.insert("78:31:C1", "Apple");
        m.insert("78:3A:84", "Apple");
        m.insert("78:4F:43", "Apple");
        m.insert("78:6C:1C", "Apple");
        m.insert("78:CA:39", "Apple");
        m.insert("78:D7:5F", "Apple");
        m.insert("78:FD:94", "Apple");
        m.insert("7C:01:91", "Apple");
        m.insert("7C:11:BE", "Apple");
        m.insert("7C:6D:62", "Apple");
        m.insert("7C:6D:F8", "Apple");
        m.insert("7C:C3:A1", "Apple");
        m.insert("7C:C5:37", "Apple");
        m.insert("7C:D1:C3", "Apple");
        m.insert("7C:FA:DF", "Apple");
        m.insert("80:00:6E", "Apple");
        m.insert("80:49:71", "Apple");
        m.insert("80:92:9F", "Apple");
        m.insert("80:B0:3D", "Apple");
        m.insert("80:BE:05", "Apple");
        m.insert("80:D6:05", "Apple");
        m.insert("80:E6:50", "Apple");
        m.insert("80:EA:96", "Apple");
        m.insert("84:29:99", "Apple");
        m.insert("84:38:35", "Apple");
        m.insert("84:8E:0C", "Apple");
        m.insert("84:B2:61", "Apple");
        m.insert("84:FC:FE", "Apple");
        m.insert("88:1F:A1", "Apple");
        m.insert("88:53:95", "Apple");
        m.insert("88:63:DF", "Apple");
        m.insert("88:C6:63", "Apple");
        m.insert("88:CB:87", "Apple");
        m.insert("88:E8:7F", "Apple");
        m.insert("8C:29:37", "Apple");
        m.insert("8C:2D:AA", "Apple");
        m.insert("8C:58:77", "Apple");
        m.insert("8C:7B:9D", "Apple");
        m.insert("8C:7C:92", "Apple");
        m.insert("8C:FA:BA", "Apple");
        m.insert("90:27:E4", "Apple");
        m.insert("90:72:40", "Apple");
        m.insert("90:B2:1F", "Apple");
        m.insert("90:B9:31", "Apple");
        m.insert("94:94:26", "Apple");
        m.insert("94:E9:6A", "Apple");
        m.insert("94:F6:D6", "Apple");
        m.insert("98:01:A7", "Apple");
        m.insert("98:03:D8", "Apple");
        m.insert("98:10:E8", "Apple");
        m.insert("98:5A:EB", "Apple");
        m.insert("98:B8:E3", "Apple");
        m.insert("98:D6:BB", "Apple");
        m.insert("98:F0:AB", "Apple");
        m.insert("98:FE:94", "Apple");
        m.insert("9C:04:EB", "Apple");
        m.insert("9C:20:7B", "Apple");
        m.insert("9C:29:3F", "Apple");
        m.insert("9C:35:EB", "Apple");
        m.insert("9C:4F:DA", "Apple");
        m.insert("9C:84:BF", "Apple");
        m.insert("9C:F3:87", "Apple");
        m.insert("9C:F4:8E", "Apple");
        m.insert("9C:FC:01", "Apple");
        m.insert("A0:18:28", "Apple");
        m.insert("A0:3B:E3", "Apple");
        m.insert("A0:4E:A7", "Apple");
        m.insert("A0:99:9B", "Apple");
        m.insert("A0:D7:95", "Apple");
        m.insert("A0:ED:CD", "Apple");
        m.insert("A4:31:35", "Apple");
        m.insert("A4:5E:60", "Apple");
        m.insert("A4:67:06", "Apple");
        m.insert("A4:83:E7", "Apple");
        m.insert("A4:B1:97", "Apple");
        m.insert("A4:B8:05", "Apple");
        m.insert("A4:C3:61", "Apple");
        m.insert("A4:D1:8C", "Apple");
        m.insert("A4:D1:D2", "Apple");
        m.insert("A4:F1:E8", "Apple");
        m.insert("A8:20:66", "Apple");
        m.insert("A8:5B:78", "Apple");
        m.insert("A8:66:7F", "Apple");
        m.insert("A8:88:08", "Apple");
        m.insert("A8:8E:24", "Apple");
        m.insert("A8:96:8A", "Apple");
        m.insert("A8:BB:CF", "Apple");
        m.insert("A8:FA:D8", "Apple");
        m.insert("AA:BB:CC", "Unknown Vendor");
        m.insert("AC:29:3A", "Apple");
        m.insert("AC:3C:0B", "Apple");
        m.insert("AC:61:EA", "Apple");
        m.insert("AC:7F:3E", "Apple");
        m.insert("AC:87:A3", "Apple");
        m.insert("AC:BC:32", "Apple");
        m.insert("AC:CF:5C", "Apple");
        m.insert("AC:E4:B5", "Apple");
        m.insert("AC:FD:EC", "Apple");
        m.insert("AC:FD:CE", "Apple");
        m.insert("B0:10:41", "HUAWEI");
        m.insert("B0:19:C6", "Apple");
        m.insert("B0:34:95", "Apple");
        m.insert("B0:65:BD", "Apple");
        m.insert("B0:70:2D", "Apple");
        m.insert("B0:9F:BA", "Apple");
        m.insert("B0:CA:68", "Apple");
        m.insert("B4:18:D1", "Apple");
        m.insert("B4:8B:19", "Apple");
        m.insert("B4:F0:AB", "Apple");
        m.insert("B4:F6:1C", "Apple");
        m.insert("B8:09:8A", "Apple");
        m.insert("B8:17:C2", "Apple");
        m.insert("B8:44:D9", "Apple");
        m.insert("B8:5D:0A", "Apple");
        m.insert("B8:78:2E", "Apple");
        m.insert("B8:8D:12", "Apple");
        m.insert("B8:C7:5D", "Apple");
        m.insert("B8:E8:56", "Apple");
        m.insert("B8:F6:B1", "Apple");
        m.insert("B8:FF:61", "Apple");
        m.insert("BC:3B:AF", "Apple");
        m.insert("BC:4C:C4", "Apple");
        m.insert("BC:52:B7", "Apple");
        m.insert("BC:54:36", "Apple");
        m.insert("BC:67:78", "Apple");
        m.insert("BC:92:6B", "Apple");
        m.insert("BC:9F:EF", "Apple");
        m.insert("BC:FE:D9", "Apple");
        m.insert("C0:1A:DA", "Apple");
        m.insert("C0:3F:0E", "NETGEAR");
        m.insert("C0:63:94", "Apple");
        m.insert("C0:84:7A", "Apple");
        m.insert("C0:9F:42", "Apple");
        m.insert("C0:CC:F8", "Apple");
        m.insert("C0:CE:CD", "Apple");
        m.insert("C0:D0:12", "Apple");
        m.insert("C0:F2:FB", "Apple");
        m.insert("C4:2C:03", "Apple");
        m.insert("C4:B3:01", "Apple");
        m.insert("C8:1E:E7", "Apple");
        m.insert("C8:2A:14", "Apple");
        m.insert("C8:33:4B", "Apple");
        m.insert("C8:69:CD", "Apple");
        m.insert("C8:6F:1D", "Apple");
        m.insert("C8:85:50", "Apple");
        m.insert("C8:B5:B7", "Apple");
        m.insert("C8:BC:C8", "Apple");
        m.insert("C8:D0:83", "Apple");
        m.insert("C8:E0:EB", "Apple");
        m.insert("C8:F6:50", "Apple");
        m.insert("CC:08:8D", "Apple");
        m.insert("CC:08:E0", "Apple");
        m.insert("CC:20:E8", "Apple");
        m.insert("CC:25:EF", "Apple");
        m.insert("CC:29:F5", "Apple");
        m.insert("CC:44:63", "Apple");
        m.insert("CC:78:5F", "Apple");
        m.insert("CC:C7:60", "Apple");
        m.insert("D0:03:4B", "Apple");
        m.insert("D0:23:DB", "Apple");
        m.insert("D0:25:98", "Apple");
        m.insert("D0:33:11", "Apple");
        m.insert("D0:4F:7E", "Apple");
        m.insert("D0:A6:37", "Apple");
        m.insert("D0:C5:F3", "Apple");
        m.insert("D0:E1:40", "Apple");
        m.insert("D4:61:9D", "Apple");
        m.insert("D4:9A:20", "Apple");
        m.insert("D4:DC:CD", "Apple");
        m.insert("D4:F4:6F", "Apple");
        m.insert("D8:00:4D", "Apple");
        m.insert("D8:1D:72", "Apple");
        m.insert("D8:30:62", "Apple");
        m.insert("D8:8F:76", "Apple");
        m.insert("D8:96:95", "Apple");
        m.insert("D8:9E:3F", "Apple");
        m.insert("D8:A2:5E", "Apple");
        m.insert("D8:BB:2C", "Apple");
        m.insert("D8:CF:9C", "Apple");
        m.insert("D8:D1:CB", "Apple");
        m.insert("DC:2B:2A", "Apple");
        m.insert("DC:37:14", "Apple");
        m.insert("DC:41:5F", "Apple");
        m.insert("DC:56:E7", "Apple");
        m.insert("DC:86:D8", "Apple");
        m.insert("DC:9B:9C", "Apple");
        m.insert("DC:A4:CA", "Apple");
        m.insert("DC:A9:04", "Apple");
        m.insert("E0:5F:45", "Apple");
        m.insert("E0:66:78", "Apple");
        m.insert("E0:AC:CB", "Apple");
        m.insert("E0:B5:2D", "Apple");
        m.insert("E0:B9:BA", "Apple");
        m.insert("E0:C7:67", "Apple");
        m.insert("E0:C9:7A", "Apple");
        m.insert("E0:F5:C6", "Apple");
        m.insert("E0:F8:47", "Apple");
        m.insert("E4:25:E7", "Apple");
        m.insert("E4:8B:7F", "Apple");
        m.insert("E4:98:D6", "Apple");
        m.insert("E4:C6:3D", "Apple");
        m.insert("E4:CE:8F", "Apple");
        m.insert("E8:04:0B", "Apple");
        m.insert("E8:06:88", "Apple");
        m.insert("E8:80:2E", "Apple");
        m.insert("E8:8D:28", "Apple");
        m.insert("E8:B2:AC", "Apple");
        m.insert("EC:35:86", "Apple");
        m.insert("EC:85:2F", "Apple");
        m.insert("EC:AD:B8", "Apple");
        m.insert("F0:18:98", "Apple");
        m.insert("F0:24:75", "Apple");
        m.insert("F0:76:6F", "Apple");
        m.insert("F0:79:60", "Apple");
        m.insert("F0:99:BF", "Apple");
        m.insert("F0:B4:79", "Apple");
        m.insert("F0:C1:F1", "Apple");
        m.insert("F0:CB:A1", "Apple");
        m.insert("F0:D1:A9", "Apple");
        m.insert("F0:DB:F8", "Apple");
        m.insert("F0:DC:E2", "Apple");
        m.insert("F0:F6:1C", "Apple");
        m.insert("F4:0F:24", "Apple");
        m.insert("F4:1B:A1", "Apple");
        m.insert("F4:37:B7", "Apple");
        m.insert("F4:5C:89", "Apple");
        m.insert("F4:F1:5A", "Apple");
        m.insert("F4:F5:D8", "Apple");
        m.insert("F4:F9:51", "Apple");
        m.insert("F8:03:77", "Apple");
        m.insert("F8:1E:DF", "Apple");
        m.insert("F8:27:93", "Apple");
        m.insert("F8:2D:7C", "Apple");
        m.insert("F8:38:80", "Apple");
        m.insert("F8:5B:A0", "Apple");
        m.insert("F8:62:14", "Apple");
        m.insert("F8:FF:C2", "Apple");
        m.insert("FC:25:3F", "Apple");
        m.insert("FC:B6:D8", "Apple");
        m.insert("FC:D8:48", "Apple");
        m.insert("FC:E9:98", "Apple");
        m.insert("FC:FC:48", "Apple");
        m
    };
}

pub fn get_manufacturer_from_mac(mac: &str) -> Option<String> {
    // Get first 3 octets (OUI)
    let oui = mac.get(0..8)?.to_uppercase();

    // Look up in vendor database
    VENDOR_MAP.get(oui.as_str()).map(|v| v.to_string())
}